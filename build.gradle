plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'io.github.g4lowy'
version = '0.0.1-SNAPSHOT'
description = 'phishing-guard'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    // PostgreSQL + R2DBC
    implementation "org.springframework.boot:spring-boot-starter-data-r2dbc"
    implementation "org.postgresql:r2dbc-postgresql:1.0.7.RELEASE"

    // Flyway + JDBC PostgreSQL
    implementation("org.flywaydb:flyway-core:11.11.2")
    implementation("org.flywaydb:flyway-database-postgresql:11.11.2")
    runtimeOnly('org.postgresql:postgresql:42.7.7')

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'

    // Http client utils
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'

    // url utils
    implementation "com.google.guava:guava:33.4.8-jre"
    implementation "com.norconex.commons:norconex-commons-lang:2.1.0"
    implementation 'org.apache.commons:commons-lang3:3.18.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "io.projectreactor:reactor-test"

    testImplementation 'org.testcontainers:junit-jupiter:1.20.1'
    testImplementation 'org.testcontainers:postgresql:1.20.1'
    testImplementation "com.squareup.okhttp3:mockwebserver:4.12.0"
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('buildDocker', Exec) {
    dependsOn build
    commandLine 'docker', 'build', '-t', "${project.name}:${project.version}", '.'
}

tasks.named("bootJar") {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    enabled = false
}